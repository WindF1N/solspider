#!/usr/bin/env python3

import os
import sys

EBOSHERS_LOGS_DIR = "eboshers_logs"

def generate_output_filename(wallet_addresses: list[str]) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–¥—Ä–µ—Å–æ–≤ –∫–æ—à–µ–ª—å–∫–æ–≤."""
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∏—Ö —á–µ—Ä–µ–∑ '+'
    short_wallet_names = [addr[:8] for addr in wallet_addresses]
    filename_prefix = "+".join(short_wallet_names)
    return f"contracts_{filename_prefix}.txt"


def search_wallets_in_logs(wallet_addresses: list[str]):
    """–ò—â–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–æ–≤ –≤–æ –≤—Å–µ—Ö –ª–æ–≥-—Ñ–∞–π–ª–∞—Ö –≤ –ø–∞–ø–∫–µ EBOSHERS_LOGS_DIR."""
    if not wallet_addresses:
        print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞.")
        return

    print(f"üîç –ò—â–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –≤—Å–µ –∫–æ—à–µ–ª—å–∫–∏: {', '.join(wallet_addresses)}...")
    found_contracts = set()

    if not os.path.exists(EBOSHERS_LOGS_DIR):
        print(f"‚ùå –ü–∞–ø–∫–∞ {EBOSHERS_LOGS_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    for filename in os.listdir(EBOSHERS_LOGS_DIR):
        if filename.endswith('.log'):
            contract_address = filename.replace('.log', '')
            filepath = os.path.join(EBOSHERS_LOGS_DIR, filename)

            try:
                # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, –∫–∞–∫–∏–µ –∫–æ—à–µ–ª—å–∫–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–º —Ñ–∞–π–ª–µ
                wallets_found_in_file = {addr: False for addr in wallet_addresses}
                with open(filepath, 'r', encoding='utf-8') as f:
                    for line in f:
                        for wallet_addr in wallet_addresses:
                            if wallet_addr in line:
                                wallets_found_in_file[wallet_addr] = True
                        
                        # –ï—Å–ª–∏ –≤—Å–µ –∫–æ—à–µ–ª—å–∫–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ, –ø—Ä–µ—Ä—ã–≤–∞–µ–º —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                        if all(wallets_found_in_file.values()):
                            found_contracts.add(contract_address)
                            print(f"‚úÖ –í—Å–µ –∫–æ—à–µ–ª—å–∫–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ: {contract_address}")
                            break  # –ù–∞–π–¥–µ–Ω—ã –≤—Å–µ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ñ–∞–π–ª—É
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filepath}: {e}")

    if not found_contracts:
        print(f"ü§∑‚Äç‚ôÇÔ∏è –í—Å–µ –∫–æ—à–µ–ª—å–∫–∏ ({', '.join(wallet_addresses)}) –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤–º–µ—Å—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ.")
    else:
        print(f"\n--- –í—Å–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã ({len(found_contracts)}), —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ --- ")
        for contract in sorted(list(found_contracts)):
            print(contract)

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ñ–∞–π–ª
        output_filename = generate_output_filename(wallet_addresses)
        try:
            with open(output_filename, 'w', encoding='utf-8') as f:
                f.write(f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∫–æ—à–µ–ª—å–∫–∏: {', '.join(wallet_addresses)}\n")
                f.write(f"–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤: {len(found_contracts)}\n\n")
                f.write("--- –°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ ---\n")
                for contract in sorted(list(found_contracts)):
                    f.write(f"{contract}\n")
            print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {output_filename}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ñ–∞–π–ª {output_filename}: {e}")


if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python search_wallet_in_logs.py <wallet_address_1> [<wallet_address_2> ...]")
        sys.exit(1)

    wallets_to_search = sys.argv[1:]
    search_wallets_in_logs(wallets_to_search)
