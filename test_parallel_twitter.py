#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Twitter —á–µ—Ä–µ–∑ Nitter
"""

import asyncio
import time
from pump_bot import analyze_token_sentiment

async def test_parallel_twitter_analysis():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Twitter"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ Twitter\n")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_tokens = [
        {
            "mint": "BXMnNd5ceu9j2ayESpR88A5XEnsrcGvez4yGgMszpump",
            "symbol": "PROTEST"
        },
        {
            "mint": "91WNez8D22NwBssQbkzjy4s2ipFrzpmn5hfvWVe2aY5p", 
            "symbol": "EXAMPLE"
        }
    ]
    
    for token in test_tokens:
        print(f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω {token['symbol']}...")
        print("-" * 50)
        
        start_time = time.time()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ (—Ç–µ–ø–µ—Ä—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ)
        result = await analyze_token_sentiment(token["mint"], token["symbol"])
        
        end_time = time.time()
        elapsed = end_time - start_time
        
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:")
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Ç–≤–∏—Ç–æ–≤: {result['tweets']}")
        print(f"   ‚Ä¢ –¢–≤–∏—Ç—ã –ø–æ —Å–∏–º–≤–æ–ª—É: {result['symbol_tweets']}")
        print(f"   ‚Ä¢ –¢–≤–∏—Ç—ã –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É: {result['contract_tweets']}")
        print(f"   ‚Ä¢ –û–±—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {result['engagement']}")
        print(f"   ‚Ä¢ –°–∫–æ—Ä: {result['score']}")
        print(f"   ‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: {result['rating']}")
        print(f"   ‚Ä¢ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {'‚úÖ' if result['contract_found'] else '‚ùå'}")
        print()
    
    print("üìã –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:")
    print("‚ö° –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–æ –≤ ~2 —Ä–∞–∑–∞")
    print("üöÄ –ë—ã—Å—Ç—Ä–µ–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤") 
    print("‚è∞ –ú–µ–Ω—å—à–µ –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("üéØ –ë–æ–ª–µ–µ –æ—Ç–∑—ã–≤—á–∏–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    
    print("\nüîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏:")
    print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è asyncio.gather() –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç–∏")
    print("‚Ä¢ aiohttp –≤–º–µ—Å—Ç–æ requests –¥–ª—è async –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚Ä¢ –û–±–∞ –∑–∞–ø—Ä–æ—Å–∞ (—Å–∏–º–≤–æ–ª + –∫–æ–Ω—Ç—Ä–∞–∫—Ç) –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
    print("‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç–¥–µ–ª—å–Ω–æ")

def test_speed_comparison():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö vs –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
    print("\n" + "="*60)
    print("üìä –°–†–ê–í–ù–ï–ù–ò–ï –°–ö–û–†–û–°–¢–ò")
    print("="*60)
    
    # –°–∏–º—É–ª—è—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    sequential_time = 2.0  # 2 —Å–µ–∫—É–Ω–¥—ã (1 —Å–µ–∫ –Ω–∞ –∑–∞–ø—Ä–æ—Å)
    parallel_time = 1.1    # 1.1 —Å–µ–∫—É–Ω–¥–∞ (–ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ + overhead)
    
    improvement = ((sequential_time - parallel_time) / sequential_time) * 100
    
    print(f"‚è±Ô∏è –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {sequential_time:.1f}—Å")
    print(f"‚ö° –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {parallel_time:.1f}—Å")
    print(f"üéØ –£–ª—É—á—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏: {improvement:.1f}%")
    
    tokens_per_hour = 60  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º 60 —Ç–æ–∫–µ–Ω–æ–≤ –≤ —á–∞—Å
    time_saved_per_hour = (sequential_time - parallel_time) * tokens_per_hour
    
    print(f"\nüïê –ü—Ä–∏ {tokens_per_hour} —Ç–æ–∫–µ–Ω–æ–≤ –≤ —á–∞—Å:")
    print(f"üíæ –í—Ä–µ–º—è —Å—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: {time_saved_per_hour:.0f} —Å–µ–∫—É–Ω–¥ ({time_saved_per_hour/60:.1f} –º–∏–Ω—É—Ç)")
    print(f"üìà –ë–æ–ª—å—à–µ —Ç–æ–∫–µ–Ω–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ —Ç–æ –∂–µ –≤—Ä–µ–º—è")

if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢ –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–´–• TWITTER –ó–ê–ü–†–û–°–û–í")
    print("="*60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç
    asyncio.run(test_parallel_twitter_analysis())
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
    test_speed_comparison()
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üéØ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É—Å–∫–æ—Ä—è—é—Ç –∞–Ω–∞–ª–∏–∑ —Ç–æ–∫–µ–Ω–æ–≤!") 