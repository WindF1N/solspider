#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç–æ–ª—å–∫–æ ACTIVITY —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–∑ bundle_analyzer.py
"""

import asyncio
import os
from test_filter import TokenFilterTester

async def test_activity_only():
    """–¢–µ—Å—Ç —Ç–æ–ª—å–∫–æ activity —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"""
    tester = TokenFilterTester()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é tokens_logs
    tokens_logs_dir = '/home/creatxr/solspider/tokens_logs'
    
    if not os.path.exists(tokens_logs_dir):
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {tokens_logs_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ë–µ—Ä–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∞
    log_files = [f for f in os.listdir(tokens_logs_dir) if f.endswith('.log')]
    
    if not log_files:
        print(f"‚ùå –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {tokens_logs_dir} –Ω–µ—Ç .log —Ñ–∞–π–ª–æ–≤")
        return
    
    print(f"üöÄ –¢–ï–°–¢ ACTIVITY –§–ò–õ–¨–¢–†–ê–¶–ò–ò")
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(log_files)} —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ —Ç–æ–∫–µ–Ω–æ–≤")
    print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–∫–µ–Ω–æ–≤:")
    
    activity_passed = 0
    activity_rejected = 0
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ç–æ–∫–µ–Ω–æ–≤
    for i, log_file in enumerate(log_files[:5]):
        print(f"\n--- –¢–æ–∫–µ–Ω {i+1}: {log_file} ---")
        log_path = os.path.join(tokens_logs_dir, log_file)
        
        try:
            result = await tester.analyze_token_with_full_criteria(log_path)
            
            print(f"–¢–æ–∫–µ–Ω: {result['token_id']}")
            print(f"–†–µ—à–µ–Ω–∏–µ: {result['decision']}")
            print(f"–ü—Ä–∏—á–∏–Ω–∞: {result['reason']}")
            
            if result['decision'] == 'WOULD_SEND':
                activity_passed += 1
                print("üöÄ ‚úÖ –ü–†–û–®–ï–õ ACTIVITY –§–ò–õ–¨–¢–†–ê–¶–ò–Æ!")
            else:
                activity_rejected += 1
                print("‚ùå –ù–ï –ü–†–û–®–ï–õ ACTIVITY –§–ò–õ–¨–¢–†–ê–¶–ò–Æ")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            activity_rejected += 1
    
    print(f"\nüìä –ò–¢–û–ì–ò ACTIVITY –¢–ï–°–¢–ê:")
    print(f"‚úÖ –ü—Ä–æ—à–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é: {activity_passed}")
    print(f"‚ùå –ù–µ –ø—Ä–æ—à–ª–∏: {activity_rejected}")
    print(f"üéØ –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è: {activity_passed/(activity_passed+activity_rejected)*100:.1f}%")
    
    print(f"\nüîß –ö–†–ò–¢–ï–†–ò–ò ACTIVITY –§–ò–õ–¨–¢–†–ê–¶–ò–ò:")
    print(f"   ‚Ä¢ –•–æ–ª–¥–µ—Ä—ã: 30-130")
    print(f"   ‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: ‚â§150 —Ö–æ–ª–¥–µ—Ä–æ–≤")
    print(f"   ‚Ä¢ –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å: ‚â•$10,000")
    print(f"   ‚Ä¢ –†–æ—Å—Ç —Ö–æ–ª–¥–µ—Ä–æ–≤: ‚â•2900/–º–∏–Ω")
    print(f"   ‚Ä¢ Dev %: ‚â§2%")
    print(f"   ‚Ä¢ –°–Ω–∞–π–ø–µ—Ä—ã: ‚â§20 (‚â§3.5% –∏–ª–∏ ‚â§5% —Å exit)")
    print(f"   ‚Ä¢ –ò–Ω—Å–∞–π–¥–µ—Ä—ã: ‚â§15% –∏–ª–∏ ‚â§22% —Å exit")
    print(f"   ‚Ä¢ + –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤")

if __name__ == "__main__":
    asyncio.run(test_activity_only())