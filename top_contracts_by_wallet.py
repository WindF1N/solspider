#!/usr/bin/env python3

import os
import sys
from collections import defaultdict

EBOSHERS_LOGS_DIR = "eboshers_logs"

def get_top_contracts_with_wallet_by_total_lines(wallet_address: str, top_n: int = 1000):
    """–ò—â–µ—Ç —Ç–æ–ø –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫, –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—Ä–æ–∫ –≤ –ª–æ–≥-—Ñ–∞–π–ª–µ."""
    print(f"üîç –ò—â–µ–º —Ç–æ–ø –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –∫–æ—à–µ–ª–µ–∫ {wallet_address}, –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—Ä–æ–∫...")
    contract_total_lines = defaultdict(int)

    if not os.path.exists(EBOSHERS_LOGS_DIR):
        print(f"‚ùå –ü–∞–ø–∫–∞ {EBOSHERS_LOGS_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return []

    for filename in os.listdir(EBOSHERS_LOGS_DIR):
        if filename.endswith('.log'):
            contract_address = filename.replace('.log', '')
            filepath = os.path.join(EBOSHERS_LOGS_DIR, filename)

            try:
                # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –≤ —ç—Ç–æ–º –ª–æ–≥-—Ñ–∞–π–ª–µ
                wallet_found_in_file = False
                with open(filepath, 'r', encoding='utf-8') as f:
                    lines = f.readlines()
                    for line in lines:
                        if wallet_address in line:
                            wallet_found_in_file = True
                            break
                
                # –®–∞–≥ 2: –ï—Å–ª–∏ –∫–æ—à–µ–ª–µ–∫ –Ω–∞–π–¥–µ–Ω, –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
                if wallet_found_in_file:
                    contract_total_lines[contract_address] = len(lines)

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {filepath}: {e}")

    if not contract_total_lines:
        print(f"ü§∑‚Äç‚ôÇÔ∏è –ö–æ—à–µ–ª–µ–∫ {wallet_address} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ –æ–¥–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ –∏–ª–∏ –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.")
        return []

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—Ä–æ–∫ –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ
    sorted_contracts = sorted(contract_total_lines.items(), key=lambda item: item[1], reverse=True)

    print(f"\n--- –¢–æ–ø {top_n} –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –¥–ª—è –∫–æ—à–µ–ª—å–∫–∞ {wallet_address} –ø–æ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—Ä–æ–∫ ---")
    results = []
    for i, (contract, count) in enumerate(sorted_contracts[:top_n]):
        print(f"{i+1}. {contract} (–í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {count})")
        results.append((contract, count))

    return results

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python top_contracts_with_wallet_by_total_lines.py <wallet_address> [top_N]")
        print("–ü—Ä–∏–º–µ—Ä: python top_contracts_with_wallet_by_total_lines.py niggerd597QYedtvjQDVHZTCCGyJrwHNm2i49dkm5zS 5")
        sys.exit(1)

    wallet_to_search = sys.argv[1]
    top_n_contracts = int(sys.argv[2]) if len(sys.argv) > 2 else 1000
    
    get_top_contracts_with_wallet_by_total_lines(wallet_to_search, top_n_contracts)
