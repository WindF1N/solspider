#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ—á–µ–º—É —Ç–æ–∫–µ–Ω—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç activity —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
"""

import asyncio
import os
import logging
from test_filter import TokenFilterTester

# –í–∫–ª—é—á–∞–µ–º DEBUG –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.DEBUG, 
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('debug_activity.log', mode='w', encoding='utf-8')
    ]
)

async def debug_activity_conditions():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ activity —É—Å–ª–æ–≤–∏–π"""
    tester = TokenFilterTester()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é tokens_logs
    tokens_logs_dir = '/home/creatxr/solspider/tokens_logs'
    
    if not os.path.exists(tokens_logs_dir):
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {tokens_logs_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ë–µ—Ä–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    log_files = [f for f in os.listdir(tokens_logs_dir) if f.endswith('.log')]
    
    if not log_files:
        print(f"‚ùå –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {tokens_logs_dir} –Ω–µ—Ç .log —Ñ–∞–π–ª–æ–≤")
        return
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 —Ç–æ–∫–µ–Ω–∞ –ø–æ–¥—Ä–æ–±–Ω–æ
    debug_files = log_files[:3]
    
    print(f"üî¨ –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ACTIVITY CONDITIONS")
    print(f"="*80)
    print(f"üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ–º {len(debug_files)} —Ç–æ–∫–µ–Ω–æ–≤")
    print(f"üìÑ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: debug_activity.log")
    print()
    
    for i, log_file in enumerate(debug_files, 1):
        log_path = os.path.join(tokens_logs_dir, log_file)
        token_id = log_file.replace('.log', '')
        
        print(f"{i}. üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–û–ö–ï–ù–ê: {token_id}")
        print("-" * 60)
        
        try:
            # –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
            print(f"üìã –ê–Ω–∞–ª–∏–∑ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è...")
            result = await tester.analyze_token_with_full_criteria(log_path)
            
            decision = result.get('decision', 'UNKNOWN')
            reason = result.get('reason', '–ù–µ—Ç –ø—Ä–∏—á–∏–Ω—ã')
            snapshots_checked = result.get('snapshots_checked', 0)
            total_snapshots = result.get('total_snapshots', 0)
            
            print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê:")
            print(f"   –†–µ—à–µ–Ω–∏–µ: {decision}")
            print(f"   –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Å–Ω–∞–ø—à–æ—Ç–æ–≤: {snapshots_checked}/{total_snapshots}")
            print(f"   –ü—Ä–∏—á–∏–Ω–∞: {reason}")
            
            if decision == 'WOULD_REJECT' and snapshots_checked > 0:
                print(f"üîç –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ debug_activity.log")
                print(f"üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–∫–∏–µ –∏–º–µ–Ω–Ω–æ —É—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è")
            
        except Exception as e:
            print(f"üí• –û–®–ò–ë–ö–ê: {e}")
        
        print()
    
    print("="*80)
    print("üìã –¢–ò–ü–ò–ß–ù–´–ï –ü–†–ò–ß–ò–ù–´ –û–¢–ö–õ–û–ù–ï–ù–ò–Ø:")
    print("‚ùå holders_min: < 30 —Ö–æ–ª–¥–µ—Ä–æ–≤")
    print("‚ùå holders_max: > 130 —Ö–æ–ª–¥–µ—Ä–æ–≤") 
    print("‚ùå min_liquidity: < $10,000 –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏")
    print("‚ùå holders_growth: < 2900 —Ö–æ–ª–¥–µ—Ä–æ–≤/–º–∏–Ω")
    print("‚ùå dev_percent_ok: > 2% —É –¥–µ–≤–∞")
    print("‚ùå snipers_ok: > 20 —Å–Ω–∞–π–ø–µ—Ä–æ–≤ –∏–ª–∏ > 3.5%")
    print("‚ùå insiders_ok: > 15% –∏–Ω—Å–∞–π–¥–µ—Ä–æ–≤")
    print("‚ùå bundlers_ok: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–Ω–¥–ª–µ—Ä–æ–≤")
    print("‚ùå –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏: –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã")
    print()
    print(f"üìÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª debug_activity.log –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏!")

if __name__ == "__main__":
    asyncio.run(debug_activity_conditions())