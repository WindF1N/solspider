#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∏–∑ Google Sheets
–∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏
"""
import asyncio
import logging
import os
from duplicate_groups_manager import get_duplicate_groups_manager, initialize_duplicate_groups_manager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def restore_groups():
    """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥—Ä—É–ø–ø—ã –∏–∑ Google Sheets –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞
        telegram_token = os.getenv('TELEGRAM_BOT_TOKEN')
        if not telegram_token:
            logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return False
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –≥—Ä—É–ø–ø –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        initialize_duplicate_groups_manager(telegram_token)
        manager = get_duplicate_groups_manager()
        
        if not manager:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä –≥—Ä—É–ø–ø")
            return False
        
        logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –∏–∑ Google Sheets...")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä—É–ø–ø—ã
        restored_groups = await manager.restore_groups_from_sheets_and_update_messages()
        
        if not restored_groups:
            logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä—É–ø–ø—ã")
            return False
        
        logger.info(f"‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {len(restored_groups)} –≥—Ä—É–ø–ø")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
        chat_id = -1002680160752  # ID –≥—Ä—É–ø–ø—ã
        thread_id = 14  # ID —Ç–µ–º—ã –¥–ª—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        
        logger.info("üîÑ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ Google Sheets...")
        
        updated_messages = await manager.update_existing_messages_with_buttons(chat_id, thread_id)
        
        if updated_messages:
            logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(updated_messages)} –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏")
        else:
            logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...")
    
    success = await restore_groups()
    
    if success:
        logger.info("‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    else:
        logger.error("‚ùå –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")

if __name__ == "__main__":
    asyncio.run(main()) 