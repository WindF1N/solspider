#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
"""

import os
import sys
import subprocess
from typing import Optional

def _sync_get_token_from_script() -> Optional[str]:
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤ —Å–∫—Ä–∏–ø—Ç–∞ padre_get_access_token.py"""
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç padre_get_access_token.py
        script_path = os.path.join(os.path.dirname(__file__), "padre_get_access_token.py")
        result = subprocess.run(
            ["python", script_path],
            capture_output=True,
            text=True,
            cwd=os.path.dirname(__file__)
        )

        if result.returncode == 0:
            print("‚úÖ –°–∫—Ä–∏–ø—Ç padre_get_access_token.py –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")

            # –ß–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ token.txt
            token_file = os.path.join(os.path.dirname(__file__), "token.txt")
            if os.path.exists(token_file):
                with open(token_file, 'r') as f:
                    token = f.read().strip()

                if token and token.startswith('eyJ'):
                    return token
                else:
                    print("‚ùå –¢–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª–µ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
                    return None
            else:
                print("‚ùå –§–∞–π–ª token.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {result.stderr}")
            return None

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        return None

if __name__ == "__main__":
    print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞...")
    token = _sync_get_token_from_script()

    if token:
        print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìè –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: {len(token)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üîë –ù–∞—á–∞–ª–æ —Ç–æ–∫–µ–Ω–∞: {token[:50]}...")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω")
