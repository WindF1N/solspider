#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ UTC –∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–∞—é—Ç —Ä–∞–∑–Ω—ã–µ –¥–∞—Ç—ã
"""

from datetime import datetime, timedelta
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='[%(asctime)s] %(levelname)s: %(message)s',
    datefmt='%H:%M:%S'
)
logger = logging.getLogger(__name__)

def test_timezone_edge_cases():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ –∫–æ–≥–¥–∞ UTC –∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–∞—é—Ç —Ä–∞–∑–Ω—ã–µ –¥–∞—Ç—ã"""
    
    print("üß™ –¢–ï–°–¢ –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í –° –ß–ê–°–û–í–´–ú–ò –ü–û–Ø–°–ê–ú–ò")
    print("="*60)
    
    # –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    utc_now = datetime.utcnow()
    local_now = datetime.now()
    offset_hours = (local_now - utc_now).total_seconds() / 3600
    
    print(f"üïê UTC –≤—Ä–µ–º—è: {utc_now.strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üïê –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {local_now.strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üåç –°–º–µ—â–µ–Ω–∏–µ: UTC{'+' if offset_hours >= 0 else ''}{offset_hours:.0f}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å–∏—Ç—É–∞—Ü–∏—é
    utc_yesterday = (utc_now - timedelta(days=1)).strftime('%Y-%m-%d')
    local_yesterday = (local_now - timedelta(days=1)).strftime('%Y-%m-%d')
    
    print(f"\nüìÖ –¢–ï–ö–£–©–ê–Ø –°–ò–¢–£–ê–¶–ò–Ø:")
    print(f"   UTC yesterday: {utc_yesterday}")
    print(f"   Local yesterday: {local_yesterday}")
    
    if utc_yesterday != local_yesterday:
        print(f"   ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê –ê–ö–¢–ò–í–ù–ê! –†–∞–∑–Ω—ã–µ –¥–∞—Ç—ã!")
    else:
        print(f"   ‚úÖ –°–µ–π—á–∞—Å –¥–∞—Ç—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞ —Å—É—Ç–æ–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã
    print(f"\nüïê –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ê–ó–ù–´–• –í–†–ï–ú–ï–ù –°–£–¢–û–ö:")
    print("-" * 60)
    
    test_times = [
        (0, 30),   # 00:30 - —Ä–∞–Ω–æ —É—Ç—Ä–æ–º
        (1, 0),    # 01:00 - –∫–æ–≥–¥–∞ UTC –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ –Ω–æ–≤—ã–π –¥–µ–Ω—å
        (2, 30),   # 02:30 - –º–µ–∂–¥—É –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
        (3, 0),    # 03:00 - –∫–æ–≥–¥–∞ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ –Ω–æ–≤—ã–π –¥–µ–Ω—å
        (12, 0),   # 12:00 - –ø–æ–ª–¥–µ–Ω—å
        (23, 30),  # 23:30 - –ø–æ–∑–¥–Ω–æ –≤–µ—á–µ—Ä–æ–º
    ]
    
    for hour, minute in test_times:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –≤—Ä–µ–º—è
        test_local = local_now.replace(hour=hour, minute=minute, second=0, microsecond=0)
        test_utc = test_local - timedelta(hours=offset_hours)
        
        # –í—ã—á–∏—Å–ª—è–µ–º yesterday –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ—Ç–æ–¥–∞
        test_utc_yesterday = (test_utc - timedelta(days=1)).strftime('%Y-%m-%d')
        test_local_yesterday = (test_local - timedelta(days=1)).strftime('%Y-%m-%d')
        
        status = "‚ö†Ô∏è –†–ê–ó–ù–´–ï" if test_utc_yesterday != test_local_yesterday else "‚úÖ –û–î–ò–ù–ê–ö–û–í–´–ï"
        
        print(f"   {hour:02d}:{minute:02d} | UTC: {test_utc_yesterday} | Local: {test_local_yesterday} | {status}")

def demonstrate_problem_scenario():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∫–æ–≥–¥–∞ –ø—Ä–æ–±–ª–µ–º–∞ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è"""
    
    print(f"\nüéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–ë–õ–ï–ú–´:")
    print("="*60)
    
    # –°–∏—Å—Ç–µ–º–∞ –≤ MSK (UTC+3), –≤—Ä–µ–º—è 01:30 UTC = 04:30 MSK
    print("–°—Ü–µ–Ω–∞—Ä–∏–π: –°–∏—Å—Ç–µ–º–∞ –≤ MSK (UTC+3), –≤—Ä–µ–º—è 01:30 UTC")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —ç—Ç–æ –≤—Ä–µ–º—è
    utc_time = datetime(2025, 6, 24, 1, 30, 0)  # 01:30 UTC
    local_time = utc_time + timedelta(hours=3)   # 04:30 MSK
    
    print(f"üïê UTC: {utc_time.strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üïê MSK: {local_time.strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –í—ã—á–∏—Å–ª—è–µ–º yesterday
    utc_yesterday = (utc_time - timedelta(days=1)).strftime('%Y-%m-%d')
    local_yesterday = (local_time - timedelta(days=1)).strftime('%Y-%m-%d')
    
    print(f"\nüìÖ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"   UTC –º–µ—Ç–æ–¥: since={utc_yesterday}")
    print(f"   Local –º–µ—Ç–æ–¥: since={local_yesterday}")
    
    if utc_yesterday != local_yesterday:
        print(f"   ‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–ê: –†–∞–∑–Ω—ã–µ –¥–∞—Ç—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ since!")
        print(f"   üìù UTC –¥–∞–µ—Ç –±–æ–ª–µ–µ —Ä–∞–Ω–Ω—é—é –¥–∞—Ç—É")
        print(f"   üìù –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –Ω–æ–≤—ã–µ —Ç–≤–∏—Ç—ã")
    else:
        print(f"   ‚úÖ –í —ç—Ç–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–∞—Ç—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ")

def show_fix_impact():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–ª–∏—è–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    
    print(f"\nüîß –í–õ–ò–Ø–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("="*60)
    
    print("–î–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("   pump_bot.py: yesterday = (datetime.utcnow() - timedelta(days=1)).strftime('%Y-%m-%d')")
    print("   background_monitor.py: yesterday = (datetime.utcnow() - timedelta(days=1)).strftime('%Y-%m-%d')")
    print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞: –í –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—ã UTC –∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–∞—é—Ç —Ä–∞–∑–Ω—ã–µ –¥–∞—Ç—ã")
    
    print("\n–ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("   pump_bot.py: yesterday = (datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d')")
    print("   background_monitor.py: yesterday = (datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d')")
    print("   ‚úÖ –†–µ—à–µ–Ω–∏–µ: –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å–∏—Å—Ç–µ–º—ã")
    
    print("\n–ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:")
    print("   ‚Ä¢ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤ –ª—é–±–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ")
    print("   ‚Ä¢ –ù–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞ —Ç–≤–∏—Ç–æ–≤ –∏–∑-–∑–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∞—Ç")
    print("   ‚Ä¢ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã")
    print("   ‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")

if __name__ == "__main__":
    test_timezone_edge_cases()
    demonstrate_problem_scenario()
    show_fix_impact()
    
    print(f"\n‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–ò–ú–ï–ù–ï–ù–û –í –§–ê–ô–õ–ê–•:")
    print("   ‚Ä¢ pump_bot.py")
    print("   ‚Ä¢ background_monitor.py")
    print(f"\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π") 