#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ F4ALfBc8QpkgDJ1KK6YkcqqPUZbJTazAsnD4GGnApump
"""

import asyncio
from pump_bot import search_single_query, analyze_token_sentiment
from datetime import datetime, timedelta

async def check_specific_token():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–∫–µ–Ω –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –¢–û–ö–ï–ù–ê F4ALfBc8QpkgDJ1KK6YkcqqPUZbJTazAsnD4GGnApump")
    print("=" * 80)
    
    mint = "F4ALfBc8QpkgDJ1KK6YkcqqPUZbJTazAsnD4GGnApump"
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Nitter
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate',
        'Cookie': "techaro.lol-anubis-auth-for-nitter.tiekoetter.com=eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJhY3Rpb24iOiJDSEFMTEVOR0UiLCJjaGFsbGVuZ2UiOiJiMGEyOWM0YzcwZGM0YzYxMjE2NTNkMzQwYTU0YTNmNTFmZmJlNDIwOGM4MWZkZmUxNDA4MTY2MGNmMDc3ZGY2IiwiZXhwIjoxNzQ5NjAyOTA3LCJpYXQiOjE3NDg5OTgxMDcsIm5iZiI6MTc0ODk5ODA0Nywibm9uY2UiOiIxMzI4MSIsInBvbGljeVJ1bGUiOiJlZDU1ZThhMGJkZjcwNGM4NTFkY2RjMjQ3OWZmMTJlMjM1YzY1Y2Q0NjMwZGYwMTgwNGM4ZTgyMzZjMzU1NzE2IiwicmVzcG9uc2UiOiIwMDAwYWEwZjdmMjBjNGQ0MGU5ODIzMWI4MDNmNWZiMGJlMGZjZmZiOGRhOTIzNDUyNDdhZjU1Yjk1MDJlZWE2In0.615N6HT0huTaYXHffqbBWqlpbpUgb7uVCh__TCoIuZLtGzBkdS3K8fGOPkFxHrbIo2OY3bw0igmtgDZKFesjAg",
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1',
    }
    
    print(f"üìç Mint –∞–¥—Ä–µ—Å: {mint}")
    yesterday = (datetime.now() - timedelta(days=1)).strftime('%Y-%m-%d')
    print(f"üîó Nitter URL: https://nitter.tiekoetter.com/search?f=tweets&q={mint}&since={yesterday}&until=&near=")
    print()
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å—É –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
    print("üìã –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –ø–æ –∞–¥—Ä–µ—Å—É –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
    print("-" * 50)
    
    try:
        tweet_data_list = await search_single_query(mint, headers)
        tweets = len(tweet_data_list)
        engagement = sum(tweet.get('engagement', 0) for tweet in tweet_data_list)
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"   ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —Ç–≤–∏—Ç–æ–≤: {tweets}")
        print(f"   ‚Ä¢ –û–±—â–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {engagement}")
        
        if tweets > 0:
            print(f"‚úÖ –ö–û–ù–¢–†–ê–ö–¢ –ù–ê–ô–î–ï–ù –í TWITTER! ({tweets} —Ç–≤–∏—Ç–æ–≤)")
        else:
            print(f"‚ùå –ö–æ–Ω—Ç—Ä–∞–∫—Ç –ù–ï –Ω–∞–π–¥–µ–Ω –≤ Twitter")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ–∫–µ–Ω–∞ (–µ—Å–ª–∏ –∑–Ω–∞–µ–º —Å–∏–º–≤–æ–ª)
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    possible_symbols = ["UNKNOWN", "TEST", "TOKEN"]
    
    for symbol in possible_symbols:
        print(f"üìã –¢–µ—Å—Ç 2: –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å —Å–∏–º–≤–æ–ª–æ–º '{symbol}'")
        print("-" * 50)
        
        try:
            result = await analyze_token_sentiment(mint, symbol)
            
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ —Ç–≤–∏—Ç–æ–≤: {result['tweets']}")
            print(f"   ‚Ä¢ –¢–≤–∏—Ç—ã –ø–æ —Å–∏–º–≤–æ–ª—É: {result['symbol_tweets']}")
            print(f"   ‚Ä¢ –¢–≤–∏—Ç—ã –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É: {result['contract_tweets']}")
            print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {result['engagement']}")
            print(f"   ‚Ä¢ –°–∫–æ—Ä: {result['score']}")
            print(f"   ‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: {result['rating']}")
            print(f"   ‚Ä¢ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞–π–¥–µ–Ω: {'‚úÖ' if result['contract_found'] else '‚ùå'}")
            
            if result['contract_found']:
                print(f"üéØ –≠–¢–û–¢ –¢–û–ö–ï–ù –î–û–õ–ñ–ï–ù –ë–´–õ –ü–û–ü–ê–°–¢–¨ –í –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø!")
                break
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print()
    
    print("üîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–†–û–ë–õ–ï–ú–´:")
    print("1. –¢–æ–∫–µ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω –∫–æ–≥–¥–∞ –±–æ—Ç –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω")
    print("2. –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    print("3. –ö—É–∫–∏ Nitter —É—Å—Ç–∞—Ä–µ–ª–∏ –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("4. –¢–æ–∫–µ–Ω –Ω–µ –ø—Ä–æ—à–µ–ª –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    print("5. WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
    
    print(f"\nüõ†Ô∏è –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞ –Ω–∞ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Ñ–æ–Ω–æ–≤–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
    print("4. –û–±–Ω–æ–≤–∏—Ç–µ –∫—É–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ —É—Å—Ç–∞—Ä–µ–ª–∏")

if __name__ == "__main__":
    asyncio.run(check_specific_token()) 