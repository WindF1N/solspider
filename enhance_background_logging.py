#!/usr/bin/env python3
"""
–£–õ–£–ß–®–ï–ù–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø BACKGROUND MONITOR
–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏—á–∏–Ω–∞—Ö –æ—à–∏–±–æ–∫ –≤ background_monitor.py
"""

import re
import os
from datetime import datetime

def enhance_background_logging():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ background_monitor.py"""
    
    print("üîç –î–û–ë–ê–í–õ–Ø–ï–ú –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –í BACKGROUND MONITOR...")
    
    if not os.path.exists('background_monitor.py'):
        print("‚ùå –§–∞–π–ª background_monitor.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    with open('background_monitor.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # 1. –£–ª—É—á—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É TimeoutError
    old_timeout_handling = r'''                except asyncio.TimeoutError:
                    logger.warning\(f"‚è∞ –¢–∞–π–º–∞—É—Ç \(8—Å\) –¥–ª—è \{token.symbol\}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"\)
                    self.consecutive_errors \+= 1
                    continue'''
    
    new_timeout_handling = '''                except asyncio.TimeoutError:
                    logger.warning(f"‚è∞ –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –¢–ê–ô–ú–ê–£–¢ –¥–ª—è {token.symbol}")
                    logger.warning(f"üìã –ü–†–ò–ß–ò–ù–ê: –º–µ–¥–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç Nitter —Å–µ—Ä–≤–µ—Ä–∞ (>5 —Å–µ–∫—É–Ω–¥)")
                    logger.warning(f"üîß –î–ï–ô–°–¢–í–ò–ï: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É")
                    self.consecutive_errors += 1
                    continue'''
    
    content = re.sub(old_timeout_handling, new_timeout_handling, content, flags=re.MULTILINE)
    
    # 2. –£–ª—É—á—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É 429 –æ—à–∏–±–æ–∫
    old_429_handling = r'''                            elif response.status == 429:
                                logger.warning\(f"‚ö†Ô∏è Rate limit –¥–ª—è \{token.symbol\}, –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ–ø—É—Å–∫"\)
                                self.consecutive_errors \+= 1
                                continue'''
    
    new_429_handling = '''                            elif response.status == 429:
                                logger.warning(f"üö´ –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: 429 –û–®–ò–ë–ö–ê –¥–ª—è {token.symbol}")
                                logger.warning(f"üìã –ü–†–ò–ß–ò–ù–ê: —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Nitter —Å–µ—Ä–≤–µ—Ä—É")
                                logger.warning(f"üîß –î–ï–ô–°–¢–í–ò–ï: –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ–ø—É—Å–∫ —Ç–æ–∫–µ–Ω–∞")
                                self.consecutive_errors += 1
                                continue'''
    
    content = re.sub(old_429_handling, new_429_handling, content, flags=re.MULTILINE)
    
    # 3. –£–ª—É—á—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    old_blocked_handling = r'''                                if title and 'Making sure you\\'re not a bot!' in title.get_text\(\):
                                    logger.error\(f"üö´ NITTER –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù! –ö–æ–Ω—Ç—Ä–∞–∫—Ç: \{token.mint\} –∫—É–∫–∏ '\{cycle_cookie\}'"\)
                                    continue'''
    
    new_blocked_handling = '''                                if title and 'Making sure you\\'re not a bot!' in title.get_text():
                                    logger.error(f"ü§ñ –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –ë–õ–û–ö–ò–†–û–í–ö–ê –¥–ª—è {token.symbol}")
                                    logger.error(f"üìã –ü–†–ò–ß–ò–ù–ê: –∑–∞—â–∏—Ç–∞ Nitter –æ—Ç –±–æ—Ç–æ–≤ ('Making sure you're not a bot!')")
                                    logger.error(f"üîß –î–ï–ô–°–¢–í–ò–ï: —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ cookie")
                                    logger.error(f"üç™ Cookie: {cycle_cookie}")
                                    continue'''
    
    content = re.sub(old_blocked_handling, new_blocked_handling, content, flags=re.MULTILINE)
    
    # 4. –£–ª—É—á—à–∞–µ–º –æ–±—â—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
    old_general_error = r'''                except Exception as e:
                    logger.error\(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ \{url\}: \{e\}"\)
                    self.consecutive_errors \+= 1
                    continue'''
    
    new_general_error = '''                except Exception as e:
                    # –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –û–®–ò–ë–û–ö –í –§–û–ù–û–í–û–ú –ú–û–ù–ò–¢–û–†–ï
                    error_type = type(e).__name__
                    error_msg = str(e)
                    
                    if "ConnectionError" in error_type:
                        logger.error(f"üîå –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –û–®–ò–ë–ö–ê –°–û–ï–î–ò–ù–ï–ù–ò–Ø –¥–ª—è {token.symbol}")
                        logger.error(f"üìã –ü–†–ò–ß–ò–ù–ê: —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ Nitter —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                    elif "SSLError" in error_type:
                        logger.error(f"üîí –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: SSL –û–®–ò–ë–ö–ê –¥–ª—è {token.symbol}")
                        logger.error(f"üìã –ü–†–ò–ß–ò–ù–ê: –ø—Ä–æ–±–ª–µ–º—ã —Å HTTPS —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º")
                    elif "HTTPError" in error_type:
                        logger.error(f"üåê –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: HTTP –û–®–ò–ë–ö–ê –¥–ª—è {token.symbol}")
                        logger.error(f"üìã –ü–†–ò–ß–ò–ù–ê: –æ—à–∏–±–∫–∞ HTTP –ø—Ä–æ—Ç–æ–∫–æ–ª–∞")
                    else:
                        logger.error(f"‚ùì –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê –¥–ª—è {token.symbol}")
                        logger.error(f"üìã –¢–ò–ü: {error_type}")
                    
                    logger.error(f"üìÑ –î–ï–¢–ê–õ–ò: {error_msg}")
                    logger.error(f"üîß –î–ï–ô–°–¢–í–ò–ï: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É")
                    
                    self.consecutive_errors += 1
                    continue'''
    
    content = re.sub(old_general_error, new_general_error, content, flags=re.MULTILINE | re.DOTALL)
    
    # 5. –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é check_contract_mentions
    old_check_function_start = r'''    async def check_contract_mentions\(self, token, cycle_cookie\):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ —Ç–æ–∫–µ–Ω–∞ –≤ Twitter —Å –∞–≤—Ç–æ—Ä–∞–º–∏"""
        try:'''
    
    new_check_function_start = '''    async def check_contract_mentions(self, token, cycle_cookie):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ —Ç–æ–∫–µ–Ω–∞ –≤ Twitter —Å –∞–≤—Ç–æ—Ä–∞–º–∏"""
        try:
            # –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ù–ê–ß–ê–õ–ê –ü–†–û–í–ï–†–ö–ò
            logger.debug(f"üîç –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É {token.symbol}")'''
    
    content = re.sub(old_check_function_start, new_check_function_start, content, flags=re.MULTILINE)
    
    # 6. –£–ª—É—á—à–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    old_success_log = r'''            if tweets_count > 0:
                logger.info\(f"üî• –ö–û–ù–¢–†–ê–ö–¢ –ù–ê–ô–î–ï–ù! \{token.symbol\} - \{tweets_count\} —Ç–≤–∏—Ç–æ–≤, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: \{engagement\}"\)'''
    
    new_success_log = '''            if tweets_count > 0:
                logger.info(f"üî• –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –ö–û–ù–¢–†–ê–ö–¢ –ù–ê–ô–î–ï–ù!")
                logger.info(f"üíé –¢–æ–∫–µ–Ω: {token.symbol} ({token.mint[:8]}...)")
                logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {tweets_count} —Ç–≤–∏—Ç–æ–≤, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {engagement}")
                logger.info(f"üë• –ê–≤—Ç–æ—Ä—ã: {len(authors)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö")
                logger.info(f"üéØ –£–°–ü–ï–•: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ")'''
    
    content = re.sub(old_success_log, new_success_log, content, flags=re.MULTILINE)
    
    # 7. –î–æ–±–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    old_performance_log = r'''        except Exception as e:
            logger.error\(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –¥–ª—è \{token.symbol\}: \{e\}"\)
            self.consecutive_errors \+= 1
            return False'''
    
    new_performance_log = '''        except Exception as e:
            # –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –û–®–ò–ë–û–ö
            error_type = type(e).__name__
            error_msg = str(e)
            
            logger.error(f"üí• –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¥–ª—è {token.symbol}")
            logger.error(f"üìã –¢–ò–ü –û–®–ò–ë–ö–ò: {error_type}")
            logger.error(f"üìÑ –°–û–û–ë–©–ï–ù–ò–ï: {error_msg}")
            logger.error(f"üîß –î–ï–ô–°–¢–í–ò–ï: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–∫–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
            
            self.consecutive_errors += 1
            return False'''
    
    content = re.sub(old_performance_log, new_performance_log, content, flags=re.MULTILINE | re.DOTALL)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('background_monitor.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ background_monitor.py: –¥–æ–±–∞–≤–ª–µ–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫")
    
    print("\nüéØ –î–û–ë–ê–í–õ–ï–ù–ù–´–ï –£–õ–£–ß–®–ï–ù–ò–Ø:")
    print("‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—à–∏–±–æ–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
    print("  - –¢–ê–ô–ú–ê–£–¢ (–º–µ–¥–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç >5 —Å–µ–∫—É–Ω–¥)")
    print("  - 429 –û–®–ò–ë–ö–ê (—Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤)")
    print("  - –ë–õ–û–ö–ò–†–û–í–ö–ê (–∑–∞—â–∏—Ç–∞ –æ—Ç –±–æ—Ç–æ–≤)")
    print("  - –û–®–ò–ë–ö–ê –°–û–ï–î–ò–ù–ï–ù–ò–Ø (—Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)")
    print("  - SSL/HTTP –û–®–ò–ë–ö–ò (–ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ—Ç–æ–∫–æ–ª–∞)")
    print("‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("‚Ä¢ –ü–æ–∫–∞–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö")
    print("‚Ä¢ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å–ø–µ—à–Ω—ã—Ö –Ω–∞—Ö–æ–¥–∫–∞—Ö")
    
    print("\nüìä –ü–†–ò–ú–ï–†–´ –ù–û–í–´–• –õ–û–ì–û–í:")
    print("‚è∞ –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –¢–ê–ô–ú–ê–£–¢ –¥–ª—è TPULSE")
    print("üìã –ü–†–ò–ß–ò–ù–ê: –º–µ–¥–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç Nitter —Å–µ—Ä–≤–µ—Ä–∞ (>5 —Å–µ–∫—É–Ω–¥)")
    print("üîß –î–ï–ô–°–¢–í–ò–ï: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É")
    print()
    print("üî• –§–û–ù–û–í–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì: –ö–û–ù–¢–†–ê–ö–¢ –ù–ê–ô–î–ï–ù!")
    print("üíé –¢–æ–∫–µ–Ω: TPULSE (8K7j2m9N...)")
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: 3 —Ç–≤–∏—Ç–æ–≤, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: 156")
    print("üë• –ê–≤—Ç–æ—Ä—ã: 2 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö")
    print("üéØ –£–°–ü–ï–•: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ")
    
    print("\n‚ö†Ô∏è –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ–æ–Ω–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è")

if __name__ == "__main__":
    enhance_background_logging() 