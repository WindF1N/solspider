#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è last_twitter_notification –≤ —Ç–∞–±–ª–∏—Ü—É tokens –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
"""

import os
import sys
from datetime import datetime
import pymysql

def add_last_twitter_notification_column():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ last_twitter_notification –≤ —Ç–∞–±–ª–∏—Ü—É tokens"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        db_host = os.getenv('DB_HOST', 'localhost')
        db_port = int(os.getenv('DB_PORT', '3306'))
        db_user = os.getenv('DB_USER', 'root')
        db_password = os.getenv('DB_PASSWORD', 'password')
        db_name = os.getenv('DB_NAME', 'solspider')
        
        print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î: {db_user}@{db_host}:{db_port}/{db_name}")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        connection = pymysql.connect(
            host=db_host,
            port=db_port,
            user=db_user,
            password=db_password,
            database=db_name,
            charset='utf8mb4'
        )
        
        cursor = connection.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª–µ
        check_query = """
        SELECT COUNT(*) 
        FROM INFORMATION_SCHEMA.COLUMNS 
        WHERE TABLE_SCHEMA = %s 
        AND TABLE_NAME = 'tokens' 
        AND COLUMN_NAME = 'last_twitter_notification'
        """
        
        cursor.execute(check_query, (db_name,))
        column_exists = cursor.fetchone()[0] > 0
        
        if column_exists:
            print("‚úÖ –ü–æ–ª–µ last_twitter_notification —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ tokens")
        else:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ last_twitter_notification...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –ø–æ–ª–µ
            alter_query = """
            ALTER TABLE tokens 
            ADD COLUMN last_twitter_notification DATETIME NULL 
            COMMENT '–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ Twitter –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
            """
            
            cursor.execute(alter_query)
            connection.commit()
            
            print("‚úÖ –ü–æ–ª–µ last_twitter_notification —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É tokens")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...")
        cursor.execute("DESCRIBE tokens")
        columns = cursor.fetchall()
        
        twitter_column = None
        total_columns = len(columns)
        
        for column in columns:
            if column[0] == 'last_twitter_notification':
                twitter_column = column
                break
        
        if twitter_column:
            print(f"‚úÖ –ü–æ–ª–µ –Ω–∞–π–¥–µ–Ω–æ: {twitter_column[0]} {twitter_column[1]} {twitter_column[2]} {twitter_column[3]}")
            print(f"üìä –í—Å–µ–≥–æ –ø–æ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ tokens: {total_columns}")
        else:
            print("‚ùå –ü–æ–ª–µ last_twitter_notification –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏!")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT COUNT(*) FROM tokens")
        token_count = cursor.fetchone()[0]
        print(f"üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ –ë–î: {token_count}")
        
        cursor.close()
        connection.close()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_database_operations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –ë–î –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    try:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ë–î...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        sys.path.append(os.path.dirname(os.path.abspath(__file__)))
        from database import get_db_manager
        
        db_manager = get_db_manager()
        session = db_manager.Session()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å —Å –Ω–æ–≤—ã–º –ø–æ–ª–µ–º
        from database import Token
        
        test_query = session.query(Token).filter(
            Token.last_twitter_notification.is_(None)
        ).count()
        
        print(f"‚úÖ –¢–µ—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ —É—Å–ø–µ—à–µ–Ω. –¢–æ–∫–µ–Ω–æ–≤ –±–µ–∑ last_twitter_notification: {test_query}")
        
        session.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ú–ò–ì–†–ê–¶–ò–Ø –°–ï–†–í–ï–†–ê: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è last_twitter_notification")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
    try:
        from dotenv import load_dotenv
        load_dotenv()
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env")
    except ImportError:
        print("‚ö†Ô∏è python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    migration_success = add_last_twitter_notification_column()
    
    if migration_success:
        print("\nüéØ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏
        test_success = test_database_operations()
        
        if test_success:
            print("\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
            print("üöÄ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
            sys.exit(0)
        else:
            print("\n‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
            sys.exit(1)
    else:
        print("\nüí• –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π!")
        sys.exit(1) 