#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ —Å <30 —Ö–æ–ª–¥–µ—Ä–∞–º–∏
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è —à—É–º –≤ –ª–æ–≥–∞—Ö
"""

import asyncio
import os
from test_filter import TokenFilterTester, filtered_low_holders_count

async def test_log_filtering():
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    tester = TokenFilterTester()
    
    tokens_logs_dir = '/home/creatxr/solspider/tokens_logs'
    
    if not os.path.exists(tokens_logs_dir):
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {tokens_logs_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 20 —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    all_files = [f for f in os.listdir(tokens_logs_dir) if f.endswith('.log')]
    test_files = all_files[:20]
    
    print(f"üîá –¢–ï–°–¢ –§–ò–õ–¨–¢–†–ê–¶–ò–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print(f"="*70)
    print(f"üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º {len(test_files)} —Ç–æ–∫–µ–Ω–æ–≤")
    print(f"üéØ –¶–µ–ª—å: –ù–ï –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω—ã —Å <30 —Ö–æ–ª–¥–µ—Ä–∞–º–∏")
    print()
    
    # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    stats = {
        'total_processed': 0,
        'would_reject_all': 0,
        'would_reject_low_holders': 0,
        'would_reject_logged': 0,
        'would_send': 0,
        'errors': 0
    }
    
    for i, log_file in enumerate(test_files, 1):
        log_path = os.path.join(tokens_logs_dir, log_file)
        token_id = log_file.replace('.log', '')
        
        print(f"{i:2d}. üîç {token_id[:20]}...", end="")
        
        try:
            result = await tester.analyze_token_with_full_criteria(log_path)
            stats['total_processed'] += 1
            
            decision = result.get('decision', 'UNKNOWN')
            holders = result.get('holders', 0)
            
            if decision == 'WOULD_REJECT':
                stats['would_reject_all'] += 1
                if holders < 30:
                    stats['would_reject_low_holders'] += 1
                    print(f" üîá –§–ò–õ–¨–¢–† (—Ç–æ–ª—å–∫–æ {holders} —Ö–æ–ª–¥–µ—Ä–æ–≤)")
                else:
                    stats['would_reject_logged'] += 1
                    print(f" ‚ùå REJECT ({holders} —Ö–æ–ª–¥–µ—Ä–æ–≤) - –õ–û–ì–ò–†–£–ï–¢–°–Ø")
            elif decision == 'WOULD_SEND':
                stats['would_send'] += 1
                print(f" ‚úÖ SEND ({holders} —Ö–æ–ª–¥–µ—Ä–æ–≤)")
            elif decision == 'ERROR':
                stats['errors'] += 1
                print(f" üí• ERROR")
            else:
                print(f" ‚ÑπÔ∏è {decision}")
                
        except Exception as e:
            stats['errors'] += 1
            print(f" üí• EXCEPTION: {e}")
    
    print()
    print("="*70)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –§–ò–õ–¨–¢–†–ê–¶–ò–ò:")
    print(f"üìà –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {stats['total_processed']}")
    print(f"‚úÖ WOULD_SEND: {stats['would_send']}")
    print(f"‚ùå WOULD_REJECT (–≤—Å–µ–≥–æ): {stats['would_reject_all']}")
    print(f"   ‚îú‚îÄ üîá –° <30 —Ö–æ–ª–¥–µ—Ä–∞–º–∏ (–û–¢–§–ò–õ–¨–¢–†–û–í–ê–ù–û): {stats['would_reject_low_holders']}")
    print(f"   ‚îî‚îÄ üìù –° ‚â•30 —Ö–æ–ª–¥–µ—Ä–∞–º–∏ (–õ–û–ì–ò–†–£–ï–¢–°–Ø): {stats['would_reject_logged']}")
    print(f"üí• –û—à–∏–±–∫–∏: {stats['errors']}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    if stats['would_reject_all'] > 0:
        filtered_percent = (stats['would_reject_low_holders'] / stats['would_reject_all']) * 100
        log_reduction = (stats['would_reject_low_holders'] / stats['total_processed']) * 100
        
        print()
        print("üéØ –≠–§–§–ï–ö–¢ –§–ò–õ–¨–¢–†–ê–¶–ò–ò:")
        print(f"üìâ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ {filtered_percent:.1f}% –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤")
        print(f"üîá –£–º–µ–Ω—å—à–µ–Ω–∏–µ —à—É–º–∞ –≤ –ª–æ–≥–∞—Ö –Ω–∞ {log_reduction:.1f}%")
        print(f"üìÑ –õ–æ–≥–∏ —Å—Ç–∞–ª–∏ —á–∏—â–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–µ–µ!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫
    global filtered_low_holders_count
    print(f"\nüî¢ –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {filtered_low_holders_count}")
    
    print()
    print("üìÑ –¢–µ–ø–µ—Ä—å –≤ test_filter.log –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ:")
    print("   ‚úÖ –¢–æ–∫–µ–Ω—ã –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –±—ã (WOULD_SEND)")
    print("   ‚ùå –¢–æ–∫–µ–Ω—ã —Å ‚â•30 —Ö–æ–ª–¥–µ—Ä–∞–º–∏ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã")
    print("   üí• –û—à–∏–±–∫–∏ –∏ –æ—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏")
    print("   üîá –¢–æ–∫–µ–Ω—ã —Å <30 —Ö–æ–ª–¥–µ—Ä–∞–º–∏ –ù–ï –∑–∞—Å–æ—Ä—è—é—Ç –ª–æ–≥")
    
    return True

if __name__ == "__main__":
    success = asyncio.run(test_log_filtering())
    exit(0 if success else 1)