#!/usr/bin/env python3
"""
–≠–ö–°–¢–†–ï–ù–ù–û–ï –£–°–ö–û–†–ï–ù–ò–ï - –ø—Ä–∏–º–µ–Ω—è–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
"""

import re
import os
from datetime import datetime

def apply_emergency_speed_boost():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏"""
    
    print("üö® –ü–†–ò–ú–ï–ù–Ø–ï–ú –≠–ö–°–¢–†–ï–ù–ù–û–ï –£–°–ö–û–†–ï–ù–ò–ï...")
    
    # 1. –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–´–ï –¢–ê–ô–ú–ê–£–¢–´ –≤ pump_bot.py
    with open('pump_bot.py', 'r', encoding='utf-8') as f:
        pump_content = f.read()
    
    # –ï—â–µ –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–µ —Ç–∞–π–º–∞—É—Ç—ã - 5 —Å–µ–∫—É–Ω–¥
    pump_content = re.sub(
        r'timeout=10',
        'timeout=5',
        pump_content
    )
    
    # –£–±–∏—Ä–∞–µ–º –í–°–ï –ø–∞—É–∑—ã –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
    pump_content = re.sub(
        r'pause_time = \d+',
        'pause_time = 0.1',
        pump_content
    )
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä—ã–π –ø–∞–∫–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º
    pump_content = re.sub(
        r'elif queue_size > 20:',
        'elif queue_size > 15:',  # –ü–∞–∫–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏ 15+ —Ç–æ–∫–µ–Ω–∞—Ö
        pump_content
    )
    
    # –£–º–µ–Ω—å—à–∞–µ–º –ø–æ—Ä–æ–≥–∏ –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏
    pump_content = re.sub(
        r'if queue_size > 50:',
        'if queue_size > 30:',  # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ 30+ —Ç–æ–∫–µ–Ω–∞—Ö
        pump_content
    )
    
    pump_content = re.sub(
        r'if queue_size > 100:',
        'if queue_size > 50:',  # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ 50+ —Ç–æ–∫–µ–Ω–∞—Ö
        pump_content
    )
    
    # –£–ë–ò–†–ê–ï–ú –∞–Ω–∞–ª–∏–∑ –∞–≤—Ç–æ—Ä–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–µ
    pump_content = re.sub(
        r'if self\.batch_mode:.*?pause = 0\.1.*?else:.*?pause = 0',
        '''if self.batch_mode or queue_size > 20:
                        # –≠–ö–°–¢–†–ï–ù–ù–´–ô –†–ï–ñ–ò–ú: –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–ª–æ–∂–Ω—ã–π –∞–Ω–∞–ª–∏–∑
                        pause = 0''',
        pump_content,
        flags=re.DOTALL
    )
    
    with open('pump_bot.py', 'w', encoding='utf-8') as f:
        f.write(pump_content)
    
    print("‚úÖ pump_bot.py: –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–∞–π–º–∞—É—Ç 5—Å, –ø–∞–∫–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏ 20+ —Ç–æ–∫–µ–Ω–∞—Ö)")
    
    # 2. –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ê–ì–†–ï–°–°–ò–í–ù–´–ï –¢–ê–ô–ú–ê–£–¢–´ –≤ background_monitor.py  
    with open('background_monitor.py', 'r', encoding='utf-8') as f:
        bg_content = f.read()
    
    # –ï—â–µ –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–µ —Ç–∞–π–º–∞—É—Ç—ã - 5 —Å–µ–∫—É–Ω–¥
    bg_content = re.sub(
        r'timeout=8',
        'timeout=5',
        bg_content
    )
    
    # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –±–∞—Ç—á–µ–π –¥–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    bg_content = re.sub(
        r'batch_size = 30',
        'batch_size = 20',  # –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ —É–º–µ–Ω—å—à–∞–µ–º –±–∞—Ç—á–∏
        bg_content
    )
    bg_content = re.sub(
        r'batch_size = 150',
        'batch_size = 30',  # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –±–∞—Ç—á–∏ –¥–ª—è Nitter
        bg_content
    )
    
    bg_content = re.sub(
        r'batch_size = 100',
        'batch_size = 20',  # –ú–∞–ª–µ–Ω—å–∫–∏–µ –±–∞—Ç—á–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
        bg_content
    )
    
    bg_content = re.sub(
        r'elif len\(tokens\) > 50:',
        'elif len(tokens) > 20:',  # –ü–∞–∫–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏ 20+ —Ç–æ–∫–µ–Ω–∞—Ö
        bg_content
    )
    
    with open('background_monitor.py', 'w', encoding='utf-8') as f:
        f.write(bg_content)
    
    print("‚úÖ background_monitor.py: –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (—Ç–∞–π–º–∞—É—Ç 5—Å, –±–∞—Ç—á–∏ 150, —Ä–µ–∂–∏–º –ø—Ä–∏ 20+ —Ç–æ–∫–µ–Ω–∞—Ö)")
    
    # 3. –°–û–ó–î–ê–ï–ú –°–ö–†–ò–ü–¢ –≠–ö–°–¢–†–ï–ù–ù–û–ô –û–ß–ò–°–¢–ö–ò
    emergency_clear_script = '''#!/usr/bin/env python3
"""
–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω–æ–π –æ—á–µ—Ä–µ–¥–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import get_db_manager, Token
from datetime import datetime, timedelta
import logging

def emergency_clear_all():
    """–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –í–°–ï–• –∑–∞–≤–∏—Å—à–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤"""
    try:
        db_manager = get_db_manager()
        session = db_manager.Session()
        
        # –û—á–∏—â–∞–µ–º –í–°–ï —Ç–æ–∫–µ–Ω—ã —Å—Ç–∞—Ä—à–µ 15 –º–∏–Ω—É—Ç –≤ –∞–Ω–∞–ª–∏–∑–µ
        fifteen_min_ago = datetime.utcnow() - timedelta(minutes=15)
        
        stuck_tokens = session.query(Token).filter(
            Token.twitter_rating == '‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...',
            Token.created_at < fifteen_min_ago
        ).all()
        
        print(f"üö® –ù–∞–π–¥–µ–Ω–æ {len(stuck_tokens)} —Ç–æ–∫–µ–Ω–æ–≤ —Å—Ç–∞—Ä—à–µ 15 –º–∏–Ω—É—Ç –≤ –∞–Ω–∞–ª–∏–∑–µ")
        
        for token in stuck_tokens:
            token.twitter_rating = 'üî¥ –ú–∞–ª–æ –≤–Ω–∏–º–∞–Ω–∏—è'
            token.twitter_score = 0.0
            token.updated_at = datetime.utcnow()
        
        session.commit()
        print(f"‚úÖ –≠–ö–°–¢–†–ï–ù–ù–û –û–ß–ò–©–ï–ù–û {len(stuck_tokens)} —Ç–æ–∫–µ–Ω–æ–≤!")
        
        session.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    emergency_clear_all()
'''
    
    with open('emergency_clear.py', 'w', encoding='utf-8') as f:
        f.write(emergency_clear_script)
    
    os.chmod('emergency_clear.py', 0o755)
    print("‚úÖ –°–æ–∑–¥–∞–Ω emergency_clear.py –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏")
    
    print("\nüö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –£–°–ö–û–†–ï–ù–ò–ï –ü–†–ò–ú–ï–ù–ï–ù–û!")
    print("üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pump_bot.py –∏ background_monitor.py (Ctrl+C)")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python emergency_clear.py")
    print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: python pump_bot.py")
    print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: python background_monitor.py") 
    print("\n‚ö° –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: —É—Å–∫–æ—Ä–µ–Ω–∏–µ –≤ 5-10 —Ä–∞–∑!")

if __name__ == "__main__":
    apply_emergency_speed_boost() 