#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–∫—É–ø–∫–∏ VIP —Å–∏—Å—Ç–µ–º—ã —Å Axiom.trade
"""

import asyncio
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

async def test_auto_buy():
    print("üß™ –¢–ï–°–¢ –ê–í–¢–û–ü–û–ö–£–ü–ö–ò VIP –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    try:
        from vip_twitter_monitor import VipTwitterMonitor
        
        # –°–æ–∑–¥–∞–µ–º VIP –º–æ–Ω–∏—Ç–æ—Ä
        monitor = VipTwitterMonitor()
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_contract = 'BzWB9JLNjhfDHoXRvhi6YruEwBVg81ya9peiDwYymwUd'
        test_username = 'MoriCoinCrypto'
        test_tweet = 'Check this awesome token! üöÄ'
        test_amount_sol = 0.001
        
        print(f"üìç –ö–æ–Ω—Ç—Ä–∞–∫—Ç: {test_contract}")
        print(f"üë§ –û—Ç: @{test_username}")
        print(f"‚ö° –°—É–º–º–∞: {test_amount_sol} SOL")
        print(f"üì± –¢–≤–∏—Ç: {test_tweet}")
        print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        print("üîß –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
        print(f"   simulate_only: {monitor.auto_buy_config.get('simulate_only', 'N/A')}")
        print(f"   trading_platform: {monitor.auto_buy_config.get('trading_platform', 'N/A')}")
        print(f"   default_amount_sol: {monitor.auto_buy_config.get('default_amount_sol', 'N/A')}")
        print()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏
        print("üöÄ –í–´–ü–û–õ–ù–Ø–ï–ú –ê–í–¢–û–ü–û–ö–£–ü–ö–£...")
        result = await monitor.execute_automatic_purchase(
            test_contract, test_username, test_tweet, test_amount_sol
        )
        
        print()
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
        print("=" * 30)
        print(f"‚úÖ –£—Å–ø–µ—Ö: {result['success']}")
        print(f"‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {result.get('execution_time', 0):.2f}—Å")
        
        if result['success']:
            print(f"üîó TX Hash: {result.get('tx_hash', 'N/A')}")
            print(f"‚ö° –°—É–º–º–∞ SOL: {result.get('sol_amount', 0):.6f}")
            print(f"üè™ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {result.get('platform', 'N/A')}")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {result.get('status', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('error', 'Unknown')}")
        
        print()
        print("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_auto_buy()) 